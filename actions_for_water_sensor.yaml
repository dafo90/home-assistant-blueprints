blueprint:
  name: Execute actions when water sensor becomes wet
  description: Execute actions when water sensor becomes wet
  source_url: https://github.com/dafo90/home-assistant-blueprints/blob/master/actions_for_water_sensor.yaml
  domain: automation
  input:
    exclude_entities:
      name: Excluded Entities (Optional)
      description: Choose the entities to be excluded from trigger.

        **NOTE** - You can only use entities. Areas and devices are not supported.
      default: { entity_id: [] }
      selector:
        target:
          entity:
            domain: binary_sensor
            device_class: moisture
    wet_actions:
      name: Wet actions
      description: Actions to execute when water sensor becomes wet, {{ trigger.event.data.new_state.name }} is replaced with
        the water sensor entity name, {{ trigger.event.data.entity_id }} with the id.
      selector:
        action: {}
    dry_actions:
      name: Dry actions
      description: Actions to execute when water sensor becomes dry, {{ trigger.event.data.new_state.name }} is replaced with
        the water sensor entity name, {{ trigger.event.data.entity_id }} with the id.
      selector:
        action: {}
    max_queued:
      name: Maximum queued notifications
      description: A number, in case of multiple events, what should be the queue max depth, defaults to 10
      default: 10
      selector:
        number:
          min: 1
          max: 100
variables:
  exclude_entities: !input exclude_entities
  valid_states:
    - on
    - off
  moisture_entities: >-
    {% set entities = namespace(sensors=[]) %}
    {% for state in states.sensor | rejectattr('attributes.domain', 'undefined') | rejectattr('attributes.device_class', 'undefined') | selectattr('attributes.domain', '==', 'moisture') | selectattr('attributes.device_class', '==', 'moisture') %}
      {% set entities.sensors = entities.sensors + [state.entity_id] %}
    {% endfor %}
    {{ entities.sensors }}
alias: Execute actions when a water sensor becomes wet
description: ''
trigger:
  - platform: event
    event_type: state_changed
    event_data: {}
condition:
  - condition: template
    value_template: >-
      {{ trigger.event.data.entity_id in moisture_entities and
      trigger.event.data.entity_id not in exclude_entities.entity_id and
      trigger.event.data.new_state.state in valid_states and 
      trigger.event.data.old_state.state in valid_states }}
action:
  - if:
      - "{{ trigger.event.data.new_state.state == 'on' }}"
    then:
      - choose: []
        default: !input 'wet_actions'
    else:
      - choose: []
        default: !input 'dry_actions'
mode: queued
max: !input max_queued